"""
    Python核心总复习
        1. Python 执行过程
            源代码  -“编译”->  字节码(.pyc)  -解释->  机器码
            |      第一次        |
            main.py  -- 入口代码应当简洁
        2. 自动化内存管理机制
            引用计数： 每个对象记录被变量绑定(引用)的数量,当为0时被销毁。
                缺点：对循环引用无效
            标记清除：当内存不足时,对整块内存空间进行扫描,清空垃圾数据(整理有用的数据).
                缺点：全盘扫描内存,计算量大。
            分代回收：将内存划分为多个区域(代),当内存不足时，进行升代操作.
                    将有用的数据,转移到下一代,垃圾数据清空.
                    由于分代,所以避免了全盘扫描.
            内存优化：尽少产生垃圾、对象池(减少重复对象的存在,减少对象创建与销毁的过程)
                    可以设置分代回收参数
        3. 容器
            字符串str:存储字符编码,不可变序列
            列表list:存储变量,可变序列
            元组tuple:存储变量,不可变序列
            字典dict:存储键值对,可变散列
            集合set:存储键,可变散列
            序列与散列：
                序列:连续的内存空间，有顺序(索引.切片)
                散列:不连续的内存空间，顺序(通过key)
            可变与不可变：
                可变：预留空间
                不可变：按需分配
    4. 可变与不可变对象的传参：
            不可变数据,在函数内的修改,不影响函数外
            可变数据,在函数内的修改,可以影响函数外
        结论：传入可变对象,修改可变对象,可以不通过返回值传递结果
    5. 函数参数
        实参：如何给形参传递数据
            位置实参：根据顺序对应
                序列实参： 函数名(*序列)       【拆】
            关键字实参：根据名称对应 函数名(形参名 = 数据)
                字典实参： 函数名(**字典)      【拆】
        形参：规定传参方式
            默认参数：实参可以不传递
                def 函数名(形参名 = 默认值)
            位置形参：实参必须传递
                星号元组形参：实参数量无限  def 函数名(*args)   【合】
            命名关键字形参：实参必须是关键字实参
                def 函数名(*args,a,b)
                def 函数名(*,a,b)
                双星号字典形参：关键字实参数量无限  def 函数名(*kwargs)【合】
"""
a = "悟空"  # 引用计数增加1
b = a      # 引用计数增加1
c = b      # 引用计数增加1
del a      # 引用计数减少1
b = "八戒" # 引用计数减少1
c = None  # 引用计数减少1
# 悟空因为引用计数为零,所以被销毁.

list01 = []
list02 = []
list01.append(list02)
list02.append(list01)

# 对不可变对象的频繁修改，要改为对可变对象的修改。
list_result = []
for i in range(100):
    list_result.append(str(i))

data01 = 100.7890
data02 = 100.7890
print(id(data01),id(data02))


def func01(p1,p2):
    # 不可变数据,在函数内的修改,不影响函数外
    p1 = 2
    # 可变数据,在函数内的修改,可以影响函数外
    p2[0] = 2

a = 1
list01 = [1]
func01(a,list01)
print(a)
print(list01)